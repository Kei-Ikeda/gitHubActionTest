name: push-versioning-json
on:
  workflow_dispatch:

jobs:
  gn2-front-build-and-s3-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    env:
      # REACT_APP_CURR_ENV: production
      # PG_USER_EMAIL: server@inter-zone.jp
      # PG_USER_NAME: gnote-github
      # PG_USER_SECRET: ${{ secrets.PG_USER_SECRET }}
      # REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: action

      - name: Get current date time
        id: get_current_date_time
        run: |
          current_date_time=$(TZ=UTC-9 date '+%Y/%m/%dT%H:%M:%S')
          echo "::set-output name=current_date_time::$current_date_time"

      - name: Create config file
        run: |
          echo -e "{}" >> ./frontVersioning.json

      - name: Update updatedAt frontVersioning.json
        uses: jossef/action-set-json-field@v1
        with:
          file: ./frontVersioning.json
          field: updatedAt
          value:  ${{ steps.get_current_date_time.outputs.current_date_time }}

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Add csv" -a
          git push origin HEAD

      - name: create pr into main from product
        # ref を判定 ここではawsパイプラインからproductを指定される想定
        id: open-pr-main
        # -B マージする対象ブランチ -t プルリクのタイトル -b プルリクの本文
        # ::set-output name=KEY_NAME::valueでsteps内で使用できる変数にセットする
        # ここでsetされるのは対象のプルリクURL
        # merge時のtargetとして使用する
        # run: |
        #   git branch
        #   echo ${{ github.ref }}
        run: |
          git branch
          echo ${{ github.ref }}
          echo "::set-output name=target-pr-url::$(gh pr create -B main -t 'auto create pr' -b 'merge into main')"

      # test branch
      - name: merge pr into main from product
        # -m 対象のブランチをマージする
        # ここではproductをmainにマージする
        # if: ${{steps.open-pr-main.outputs.target-pr-url != ''}}
        # if: ${{steps.outputs.target-pr-url != ''}}
        run: |
          echo ${{steps.outputs.target-pr-url != ''}}
          echo ${{steps.open-pr-main.outputs.target-pr-url != ''}}
          gh pr merge ${{steps.open-pr-main.outputs.target-pr-url}} -m --admin
