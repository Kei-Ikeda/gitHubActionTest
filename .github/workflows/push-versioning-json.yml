name: push-versioning-json
on:
  workflow_dispatch:

jobs:
  gn2-front-build-and-s3-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    env:
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCT_AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCT_AWS_ACCESS_KEY_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: action

      - name: Get current date time
        id: get_current_date_time
        run: |
          current_date_time=$(TZ=UTC-9 date '+%s')
          echo "::set-output name=current_date_time::$current_date_time"

      - name: Pull main branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main

      - name: Clear json file
        run: |
          echo -e "{}" > ./frontVersioning.json

      - name: Update updatedAt frontVersioning.json
        uses: jossef/action-set-json-field@v1
        with:
          file: ./frontVersioning.json
          field: updatedAt
          value:  ${{ steps.get_current_date_time.outputs.current_date_time }}

      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "update json" -a
          git push origin HEAD

      - name: Create pr into main from action
        id: open-pr-main
        run: |
          git branch
          echo ${{ github.ref }}
          echo "::set-output name=target-pr-url::$(gh pr create -B main -t 'auto create pr' -b 'merge into main')"

      - name: Merge pr into main from action
        run: |
          echo ${{steps.outputs.target-pr-url != ''}}
          echo ${{steps.open-pr-main.outputs.target-pr-url != ''}}
          gh pr merge ${{steps.open-pr-main.outputs.target-pr-url}} -m --admin

      # - name: Copy json to S3 from versioning repository
      #   uses: opspresso/action-s3-sync@master
      #   env:
      #     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      #     AWS_REGION: ap-northeast-1
      #     FROM_PATH: "./frontVersioning.json"
      #     DEST_PATH: "s3://product-front-front-app-version/frontVersioning.json"
      #     OPTIONS: "--acl public-read"

      # - name: Clear cache in CloudFront
      #   uses: chetan/invalidate-cloudfront-action@v1.2
      #   env:
      #     DISTRIBUTION: ${{ secrets.PRODUCT_DISTRIBUTION }}
      #     PATHS: "/*"
      #     AWS_REGION: ap-northeast-1
      #     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

      # - name: Success notifiaction
      #   uses: rtcamp/action-slack-notify@v2.0.0
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_COLOR: good
      #     SLACK_TITLE: "!!! Front gn2 crm reversion json update success  !!!"
      #     SLACK_MESSAGE: |
      #       :white_check_mark: gn2 front crm reversion json update success
      # - name: Failure notification
      #   if: failure()
      #   uses: rtcamp/action-slack-notify@v2.0.0
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #     SLACK_COLOR: danger
      #     SLACK_TITLE: "!!! Front gn2 crm reversion json update Failed !!!"
      #     SLACK_MESSAGE: |
      #       :skull_and_crossbones: gn2 front crm reversion json update failed